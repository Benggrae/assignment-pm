package com.example.assignmentpm.collection.domain;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.google.i18n.phonenumbers.NumberParseException;
import com.google.i18n.phonenumbers.PhoneNumberUtil;
import java.util.Date;
import java.util.regex.Pattern;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.data.annotation.Id;

@Getter
@Setter
@NoArgsConstructor
@DynamoDBTable(tableName = "member")
public class Member {
    private static final Pattern EMAIL_PATTERN = Pattern.compile("^(.+)@(.+)$");

    @Id
    @DynamoDBAutoGeneratedKey
    @DynamoDBHashKey
    private String id;

    @DynamoDBAttribute
    @DynamoDBIndexHashKey(globalSecondaryIndexName = "email")
    private String email;

    @DynamoDBAttribute
    @DynamoDBIndexHashKey(globalSecondaryIndexName = "phone")
    private String hp;

    @DynamoDBAttribute
    private String name;

    @DynamoDBAttribute
    private Date createDt = new Date();

    @Builder
    public Member(String email, String hp, String name) {
        setEmail(email);
        setHp(hp);
        this.name = name;
        this.createDt = new Date();
    }

    public void setHp(String hp) {
        validHp(hp);
        this.hp = hp;
    }

    public void setEmail(String email) {
        validEmail(email);
        this.email = email;
    }

    private void validEmail(String email) {
        final boolean valid = EMAIL_PATTERN.matcher(email).matches();
        if (!valid) {
            throw new IllegalArgumentException("유효한 이메일 주소가 아닙니다.");
        }
    }

    private void validHp(String hp) {
        try {
            PhoneNumberUtil.getInstance().parse(hp, null);
        } catch (NumberParseException e) {
            throw new IllegalArgumentException("유효하지 않은 핸드폰 번호 입니다.");
        }
    }
}
